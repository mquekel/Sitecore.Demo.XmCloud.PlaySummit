{
  "clientKey": "3509a0a2b7cc0542af1e697ea16dafe9",
  "href": "https://api-us.boxever.com/v3/flowDefinitions/fb1a5a88-5371-4d0c-8ecf-97bcbdd58a1c",
  "ref": "fb1a5a88-5371-4d0c-8ecf-97bcbdd58a1c",
  "name": "embedded_{scope}_08db12b10af84b3e9aa4a25655edbd56_en",
  "modifiedByRef": "UsQ4dFnLMklHuDXU8acKstHeXEC65tgU@clients",
  "modifiedAt": "2024-06-18T09:43:50.559Z",
  "revision": 2,
  "archived": false,
  "friendlyId": "embedded_{scope}_08db12b10af84b3e9aa4a25655edbd56_en",
  "type": "INTERACTIVE_API_FLOW",
  "subtype": "EXPERIENCE",
  "channels": [
    "WEB"
  ],
  "triggers": [],
  "dashboardLinks": [],
  "tags": [],
  "businessProcess": "interactive_v1",
  "traffic": {
    "type": "audienceTraffic",
    "weightingAlgorithm": "USER_DEFINED",
    "modifiedAt": "2024-06-18T09:43:50.559Z",
    "splits": []
  },
  "variants": [],
  "transpiledVariants": [
    {
      "ref": "c2e62664-6f30-43c2-b5bb-be6e95d70249",
      "name": "a",
      "tasks": [
        {
          "implementation": "templateRenderTask",
          "input": {
            "inputType": "templateRenderTaskInput",
            "type": "application/json",
            "template": "{\"variantId\": \"693f0cd3072a4502be2228d5c3f3ccbf\"}"
          }
        },
        {
          "implementation": "conditionsTask",
          "input": {
            "inputType": "conditionsTaskInput",
            "rules": [
              {
                "id": "scriptCondition",
                "name": "Combined condition groups",
                "description": "Combined templates within condition group for targeted experience",
                "ruleData": {
                  "expression": "(function () {\r\n    load(\"classpath:moment.js\");\r\n    load(\"classpath:moment-timezone.js\");\r\n    var returnValue = false;\r\n    var comparison = false;\r\n    var comparator = \"is\";\r\n    var operatorValue = \"before\";\r\n    var time = \"07:00\";\r\n    var tenantTimezone = \"\";\r\n\r\n    if (tenant && tenant.configurations && tenant.configurations.timeZone) {\r\n        tenantTimezone = tenant.configurations.timeZone;\r\n    }\r\n    var tenantTime = moment.tz(tenantTimezone).format('HH:mm');\r\n    \r\n    if (operatorValue === 'before') {\r\n        comparison = tenantTime <= time;\r\n    } else if (operatorValue === 'after') {\r\n        comparison = tenantTime >= time;\r\n    }\r\n        \r\n    if (comparator === \"is\") {\r\n        returnValue = comparison;\r\n    } else {\r\n        returnValue = !comparison;\r\n    }\r\n    return returnValue;\r\n})();"
                }
              }
            ]
          }
        }
      ]
    }
  ],
  "status": "PAUSED",
  "schedule": {
    "type": "simpleSchedule",
    "startDate": "2024-04-09T21:19:22.485Z"
  },
  "revisions": {
    "href": "https://api-us.boxever.com/v3/flowDefinitions/fb1a5a88-5371-4d0c-8ecf-97bcbdd58a1c/revisions"
  },
  "sampleSizeConfig": {
    "baseValue": 0.15,
    "minimumDetectableDifference": 0.02,
    "confidenceLevel": 0.95
  }
}
